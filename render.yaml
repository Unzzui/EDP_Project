# Render.yaml - Configuración para deployment en Render
services:
  # Aplicación web principal
  - type: web
    name: edp-mvp-app
    env: python
    buildCommand: "pip install -r requirements.txt && python init_db.py"
    startCommand: "gunicorn --config gunicorn_config.py wsgi:application"
    envVars:
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: DATABASE_URL
        fromDatabase:
          name: edp-database
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: edp-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: edp-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: edp-redis
          property: connectionString

  # Base de datos PostgreSQL
  - type: pserv
    name: edp-database
    databaseName: edp_mvp_db
    plan: starter

  # Redis para cache y Celery
  - type: redis
    name: edp-redis
    ipAllowList: []
    plan: starter

  # Worker de Celery (opcional, puede ejecutarse en el mismo servicio web)
  - type: worker
    name: edp-celery-worker
    env: python
    buildCommand: "pip install -r requirements.txt"
    startCommand: "celery -A edp_mvp.app.celery worker --loglevel=info --concurrency=1"
    envVars:
      - key: REDIS_URL
        fromService:
          type: redis
          name: edp-redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          type: redis
          name: edp-redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          type: redis
          name: edp-redis
          property: connectionString
